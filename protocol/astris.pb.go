// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: protocol/astris.proto

package protocol

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Empty message has no data
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_astris_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_astris_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_protocol_astris_proto_rawDescGZIP(), []int{0}
}

// A connectible peer address
type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_astris_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_astris_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_protocol_astris_proto_rawDescGZIP(), []int{1}
}

func (x *Peer) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

// The depth we wish to query
type Depth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Depth uint64 `protobuf:"fixed64,1,opt,name=depth,proto3" json:"depth,omitempty"`
}

func (x *Depth) Reset() {
	*x = Depth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_astris_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Depth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Depth) ProtoMessage() {}

func (x *Depth) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_astris_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Depth.ProtoReflect.Descriptor instead.
func (*Depth) Descriptor() ([]byte, []int) {
	return file_protocol_astris_proto_rawDescGZIP(), []int{2}
}

func (x *Depth) GetDepth() uint64 {
	if x != nil {
		return x.Depth
	}
	return 0
}

type Acceptance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accepted bool `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
}

func (x *Acceptance) Reset() {
	*x = Acceptance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_astris_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Acceptance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acceptance) ProtoMessage() {}

func (x *Acceptance) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_astris_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acceptance.ProtoReflect.Descriptor instead.
func (*Acceptance) Descriptor() ([]byte, []int) {
	return file_protocol_astris_proto_rawDescGZIP(), []int{3}
}

func (x *Acceptance) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

// this message refers to the ID of a block (its hash)
type BlockID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// our block hashes are SHA256 which means 32bytes or 4x64bit values.
	// using the "bytes" value is rubbish as it can be 2^32 long.
	// there is no fixed length possible. We will have to do the validation
	// outside the protobuf code.
	// fortunately the GRPC code has a MaxMessageSize so we can limit the damage.
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *BlockID) Reset() {
	*x = BlockID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_astris_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockID) ProtoMessage() {}

func (x *BlockID) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_astris_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockID.ProtoReflect.Descriptor instead.
func (*BlockID) Descriptor() ([]byte, []int) {
	return file_protocol_astris_proto_rawDescGZIP(), []int{4}
}

func (x *BlockID) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

// this is the block header for a block
// you can validate the proof of work with just the header
// but you must validate the payload_hash to confirm the entire
// block is valid
type BlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevId      []byte `protobuf:"bytes,1,opt,name=prev_id,json=prevId,proto3" json:"prev_id,omitempty"`
	PayloadHash []byte `protobuf:"bytes,2,opt,name=payload_hash,json=payloadHash,proto3" json:"payload_hash,omitempty"` // this should match the payload
	Timestamp   uint32 `protobuf:"fixed32,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                      // unix timestamp of block creation
	Proof       uint32 `protobuf:"fixed32,4,opt,name=proof,proto3" json:"proof,omitempty"`                              // proof of work
	Depth       uint64 `protobuf:"varint,5,opt,name=depth,proto3" json:"depth,omitempty"`                               // block height or chain depth
	Kind        uint32 `protobuf:"varint,6,opt,name=kind,proto3" json:"kind,omitempty"`
}

func (x *BlockHeader) Reset() {
	*x = BlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_astris_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeader) ProtoMessage() {}

func (x *BlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_astris_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeader.ProtoReflect.Descriptor instead.
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return file_protocol_astris_proto_rawDescGZIP(), []int{5}
}

func (x *BlockHeader) GetPrevId() []byte {
	if x != nil {
		return x.PrevId
	}
	return nil
}

func (x *BlockHeader) GetPayloadHash() []byte {
	if x != nil {
		return x.PayloadHash
	}
	return nil
}

func (x *BlockHeader) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlockHeader) GetProof() uint32 {
	if x != nil {
		return x.Proof
	}
	return 0
}

func (x *BlockHeader) GetDepth() uint64 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *BlockHeader) GetKind() uint32 {
	if x != nil {
		return x.Kind
	}
	return 0
}

// this is the full block that contains all the data
type FullBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header  *BlockHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Payload []byte       `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *FullBlock) Reset() {
	*x = FullBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_astris_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullBlock) ProtoMessage() {}

func (x *FullBlock) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_astris_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullBlock.ProtoReflect.Descriptor instead.
func (*FullBlock) Descriptor() ([]byte, []int) {
	return file_protocol_astris_proto_rawDescGZIP(), []int{6}
}

func (x *FullBlock) GetHeader() *BlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *FullBlock) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_protocol_astris_proto protoreflect.FileDescriptor

var file_protocol_astris_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x61, 0x73, 0x74, 0x72, 0x69,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x73, 0x74, 0x72, 0x69, 0x73, 0x22,
	0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1e, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x1d, 0x0a, 0x05, 0x44, 0x65, 0x70, 0x74,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x22, 0x28, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x64, 0x22, 0x19, 0x0a, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa7, 0x01, 0x0a,
	0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x72, 0x65, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x76, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x07, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x07, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x64, 0x65, 0x70,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x52, 0x0a, 0x09, 0x46, 0x75, 0x6c, 0x6c, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x73, 0x74, 0x72, 0x69, 0x73, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x32, 0xbd, 0x02, 0x0a, 0x08, 0x41,
	0x73, 0x74, 0x72, 0x69, 0x73, 0x56, 0x31, 0x12, 0x2e, 0x0a, 0x0c, 0x50, 0x65, 0x65, 0x72, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x0c, 0x2e, 0x61, 0x73, 0x74, 0x72, 0x69, 0x73,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x1a, 0x0c, 0x2e, 0x61, 0x73, 0x74, 0x72, 0x69, 0x73, 0x2e, 0x50,
	0x65, 0x65, 0x72, 0x22, 0x00, 0x30, 0x01, 0x12, 0x34, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x76, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x0d, 0x2e, 0x61, 0x73, 0x74, 0x72, 0x69, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x61, 0x73, 0x74, 0x72, 0x69, 0x73, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x00, 0x30, 0x01, 0x12, 0x30, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0f, 0x2e, 0x61, 0x73, 0x74, 0x72,
	0x69, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x61, 0x73, 0x74,
	0x72, 0x69, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x00, 0x12,
	0x33, 0x0a, 0x09, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0f, 0x2e, 0x61,
	0x73, 0x74, 0x72, 0x69, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x1a, 0x11, 0x2e,
	0x61, 0x73, 0x74, 0x72, 0x69, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x2b, 0x0a, 0x07, 0x41, 0x74, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12,
	0x0d, 0x2e, 0x61, 0x73, 0x74, 0x72, 0x69, 0x73, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x1a, 0x0f,
	0x2e, 0x61, 0x73, 0x74, 0x72, 0x69, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x11, 0x2e, 0x61, 0x73, 0x74, 0x72, 0x69, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x12, 0x2e, 0x61, 0x73, 0x74, 0x72, 0x69, 0x73, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x63, 0x68, 0x72, 0x69,
	0x73, 0x77, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x2f, 0x67, 0x6f, 0x2d, 0x61, 0x73, 0x74, 0x72, 0x69,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_protocol_astris_proto_rawDescOnce sync.Once
	file_protocol_astris_proto_rawDescData = file_protocol_astris_proto_rawDesc
)

func file_protocol_astris_proto_rawDescGZIP() []byte {
	file_protocol_astris_proto_rawDescOnce.Do(func() {
		file_protocol_astris_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_astris_proto_rawDescData)
	})
	return file_protocol_astris_proto_rawDescData
}

var file_protocol_astris_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_protocol_astris_proto_goTypes = []interface{}{
	(*Empty)(nil),       // 0: astris.Empty
	(*Peer)(nil),        // 1: astris.Peer
	(*Depth)(nil),       // 2: astris.Depth
	(*Acceptance)(nil),  // 3: astris.Acceptance
	(*BlockID)(nil),     // 4: astris.BlockID
	(*BlockHeader)(nil), // 5: astris.BlockHeader
	(*FullBlock)(nil),   // 6: astris.FullBlock
}
var file_protocol_astris_proto_depIdxs = []int32{
	5, // 0: astris.FullBlock.header:type_name -> astris.BlockHeader
	1, // 1: astris.AstrisV1.PeerExchange:input_type -> astris.Peer
	0, // 2: astris.AstrisV1.RecvBlocks:input_type -> astris.Empty
	4, // 3: astris.AstrisV1.GetBlock:input_type -> astris.BlockID
	4, // 4: astris.AstrisV1.FromBlock:input_type -> astris.BlockID
	2, // 5: astris.AstrisV1.AtDepth:input_type -> astris.Depth
	6, // 6: astris.AstrisV1.PublishBlock:input_type -> astris.FullBlock
	1, // 7: astris.AstrisV1.PeerExchange:output_type -> astris.Peer
	5, // 8: astris.AstrisV1.RecvBlocks:output_type -> astris.BlockHeader
	6, // 9: astris.AstrisV1.GetBlock:output_type -> astris.FullBlock
	6, // 10: astris.AstrisV1.FromBlock:output_type -> astris.FullBlock
	4, // 11: astris.AstrisV1.AtDepth:output_type -> astris.BlockID
	3, // 12: astris.AstrisV1.PublishBlock:output_type -> astris.Acceptance
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_protocol_astris_proto_init() }
func file_protocol_astris_proto_init() {
	if File_protocol_astris_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocol_astris_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_astris_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_astris_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Depth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_astris_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Acceptance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_astris_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_astris_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_astris_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_astris_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protocol_astris_proto_goTypes,
		DependencyIndexes: file_protocol_astris_proto_depIdxs,
		MessageInfos:      file_protocol_astris_proto_msgTypes,
	}.Build()
	File_protocol_astris_proto = out.File
	file_protocol_astris_proto_rawDesc = nil
	file_protocol_astris_proto_goTypes = nil
	file_protocol_astris_proto_depIdxs = nil
}
